{
  "root": true,
  "extends": [
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "eslint:recommended",
    "plugin:react-hooks/recommended",
    "plugin:prettier/recommended",
    "next/core-web-vitals"
  ],
  "env": {
    "es6": true,
    "node": true,
    "browser": true,
    "jest": true
  },
  "plugins": ["@typescript-eslint", "react", "react-hooks", "prettier"],
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": ["./tsconfig.json"],
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "globals": {
    "JSX": true,
    "NodeJS": true
  },
  "rules": {
    "react/react-in-jsx-scope": "off",
    "@typescript-eslint/no-shadow": "warn",
    "no-import-assign": "warn",
    "react/jsx-filename-extension": [
      "warn",
      {
        "extensions": [".tsx"]
      }
    ],
    "react/require-default-props": "off",
    "@typescript-eslint/lines-between-class-members": "off",
    "react-hooks/rules-of-hooks": "error", // Checks rules of Hooks
    "react-hooks/exhaustive-deps": "warn", // Checks effect dependencies
    "linebreak-style": ["warn", "unix"],
    "eqeqeq": "warn",
    "no-unused-expressions": "warn",
    "@typescript-eslint/no-unused-vars": "warn",
    "comma-dangle": ["warn", "only-multiline"],
    "@typescript-eslint/no-use-before-define": "warn",
    "@typescript-eslint/brace-style": "warn",
    "@typescript-eslint/ban-types": "warn",
    "@typescript-eslint/explicit-function-return-type": [
      "warn",
      {
        "allowExpressions": true,
        "allowTypedFunctionExpressions": true,
        "allowHigherOrderFunctions": true
      }
    ],
    "max-len": [
      "error",
      {
        "code": 120,
        "tabWidth": 2,
        "ignoreComments": true,
        "ignoreTrailingComments": true,
        "ignoreUrls": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true
      }
    ],
    "import/order": "warn",
    "no-console": [
      "warn",
      {
        "allow": ["error"]
      }
    ],
    "@typescript-eslint/quotes": [
      "error",
      "single",
      {
        "avoidEscape": true,
        "allowTemplateLiterals": true
      }
    ]
  }
}
